apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.1"

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        applicationId "com.example.cleanarchitecture"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'dataSource'

    productFlavors {
        db {
            dimension "dataSource"
            applicationIdSuffix ".db"
        }
        api {
            dimension "dataSource"
            applicationIdSuffix ".api"
        }
    }
}


def daggerVersion = '2.27'
def room_version = '2.2.5'

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex:rxjava:1.3.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:' + daggerVersion
    implementation 'com.google.dagger:dagger-android:' + daggerVersion
    implementation 'com.google.dagger:dagger-android-support:' + daggerVersion
    annotationProcessor 'com.google.dagger:dagger-android-processor:' + daggerVersion
    implementation 'com.google.dagger:dagger:' + daggerVersion

    implementation "com.github.moxy-community:moxy:2.0.2"
    implementation "com.github.moxy-community:moxy-app-compat:2.0.2"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'org.conscrypt:conscrypt-android:2.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.2.0'

    // Room with RXjava2 & Kotlin
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"


    kapt 'com.google.dagger:dagger-compiler:2.27'
    kapt "com.github.moxy-community:moxy-compiler:2.0.2"

    testImplementation group: 'org.spekframework.spek2', name: 'spek-dsl-jvm', version: '2.0.9'
    testImplementation group: 'org.spekframework.spek2', name: 'spek-runner-junit5', version: '2.0.9'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.0.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.0.0"

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "${targetSdk}.+"
            }
        }
    }
}